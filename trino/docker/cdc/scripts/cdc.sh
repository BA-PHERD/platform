#!/bin/bash

END_TIMESTAMP=0
RUN_SUCCESS=1
while :
do
    if [[ $RUN_SUCCESS == 1 ]]
    then
        START_TIMESTAMP="$END_TIMESTAMP"
    fi
    END_TIMESTAMP="$EPOCHSECONDS"

    echo "$(date) - Starting CDC with interval [$START_TIMESTAMP, $END_TIMESTAMP[ ..."

    ./trino --server "$TRINO_ENDPOINT" --user trino --execute "
        -- READ UNCOMMITTED should be enough because we do not allow updates (only inserts) and we limit the results using the time interval
        START TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;


        MERGE INTO hive.default.patients AS target_patients
        USING (
            SELECT owner_id, id, current_diagnose, age, sex, right_handed, schooling, egfr, first_visit, diagnose_date, a, t, n, memoria, memoria_esordio, fx_esecutive, fx_esecutive_esordio, fx_visuo_spaziali, fx_visuo_spaziali_esordio, linguaggio, linguaggio_esordio, fx_pratto_gnosiche, fx_pratto_gnosiche_esordio, social_cognition, social_cognition_esordio, comportamento, comportamento_esordio, extrapiramidale, adl, iadl, cdr, cdr_sob, tau_totale_liquor, ptau_181_liquor, ttau_ptau, mta, fazekas, koedam, gca, vascular, pet_fdg, spect, pet_a, mmse_raw, mmse_corr, fab_raw, fab_corr, memoria_di_prosa_immediata_raw, memoria_di_prosa_immediata_corr, memoria_di_prosa_differita_raw, memoria_di_prosa_differita_corr, fcsrt_immediate_free_recall_raw, fcsrt_immediate_free_recall_corr, fcsrt_delayed_free_recall_raw, fcsrt_delayed_free_recall_corr, fcsrt_isc, fcsrt_itr, fcsrt_dtr, ravlt_immediato_raw, ravlt_immediato_corr, ravlt_differito_raw, ravlt_differito_corr, ravlt_recognition, digit_span_diretto_raw, digit_span_diretto_corr, digit_span_inverso_raw, digit_span_inverso_corr, corsi_block_tapping_test_raw, corsi_block_tapping_test_corr, figura_di_rey_differita, figura_di_rey_differita_corr, matrici_attentive_raw, matrici_attentive_corr, tmt_a_raw, tmt_a_corr, tmt_b_raw, tmt_b_corr, stroop_test_tempo_raw, stroop_test_tempo_corr, stroop_test_errori_raw, stroop_test_errori_corr, fluenza_verbale_fonemica_raw, fluenza_verbale_fonemica_corr, fluenza_verbale_semantica_raw, fluenza_verbale_semantica_corr, clock_drawing_test_raw, figura_di_rey_copia, test_di_prassia_costruttiva_raw, test_di_prassia_costruttiva_corr, gds, bdi, stai_i, stai_ii, social_cognition_gs_raw, social_cognition_gs_corr, social_cognition_ia_raw, social_cognition_ia_corr, social_cognition_ea_raw, social_cognition_ea_corr, social_cognition_ci_raw, social_cognition_ci_corr, cri_totale_raw, cri_tempo_libero_raw, cri_lavoro_raw, cri_scuola_raw, test_linguistici_nndd, _timestamp
            FROM kafka.devprin.patients
            WHERE _timestamp >= from_unixtime($START_TIMESTAMP) AND _timestamp < from_unixtime($END_TIMESTAMP)
        ) AS kafka_source
        ON target_patients.id = kafka_source.id AND target_patients.owner_id = kafka_source.owner_id
        WHEN MATCHED THEN
            UPDATE SET current_diagnose = kafka_source.current_diagnose, age = kafka_source.age, sex = kafka_source.sex, right_handed = kafka_source.right_handed, schooling = kafka_source.schooling, egfr = kafka_source.egfr, first_visit = kafka_source.first_visit, diagnose_date = kafka_source.diagnose_date, a = kafka_source.a, t = kafka_source.t, n = kafka_source.n, memoria = kafka_source.memoria, memoria_esordio = kafka_source.memoria_esordio, fx_esecutive = kafka_source.fx_esecutive, fx_esecutive_esordio = kafka_source.fx_esecutive_esordio, fx_visuo_spaziali = kafka_source.fx_visuo_spaziali, fx_visuo_spaziali_esordio = kafka_source.fx_visuo_spaziali_esordio, linguaggio = kafka_source.linguaggio, linguaggio_esordio = kafka_source.linguaggio_esordio, fx_pratto_gnosiche = kafka_source.fx_pratto_gnosiche, fx_pratto_gnosiche_esordio = kafka_source.fx_pratto_gnosiche_esordio, social_cognition = kafka_source.social_cognition, social_cognition_esordio = kafka_source.social_cognition_esordio, comportamento = kafka_source.comportamento, comportamento_esordio = kafka_source.comportamento_esordio, extrapiramidale = kafka_source.extrapiramidale, adl = kafka_source.adl, iadl = kafka_source.iadl, cdr = kafka_source.cdr, cdr_sob = kafka_source.cdr_sob, tau_totale_liquor = kafka_source.tau_totale_liquor, ptau_181_liquor = kafka_source.ptau_181_liquor, ttau_ptau = kafka_source.ttau_ptau, mta = kafka_source.mta, fazekas = kafka_source.fazekas, koedam = kafka_source.koedam, gca = kafka_source.gca, vascular = kafka_source.vascular, pet_fdg = kafka_source.pet_fdg, spect = kafka_source.spect, pet_a = kafka_source.pet_a, mmse_raw = kafka_source.mmse_raw, mmse_corr = kafka_source.mmse_corr, fab_raw = kafka_source.fab_raw, fab_corr = kafka_source.fab_corr, memoria_di_prosa_immediata_raw = kafka_source.memoria_di_prosa_immediata_raw, memoria_di_prosa_immediata_corr = kafka_source.memoria_di_prosa_immediata_corr, memoria_di_prosa_differita_raw = kafka_source.memoria_di_prosa_differita_raw, memoria_di_prosa_differita_corr = kafka_source.memoria_di_prosa_differita_corr, fcsrt_immediate_free_recall_raw = kafka_source.fcsrt_immediate_free_recall_raw, fcsrt_immediate_free_recall_corr = kafka_source.fcsrt_immediate_free_recall_corr, fcsrt_delayed_free_recall_raw = kafka_source.fcsrt_delayed_free_recall_raw, fcsrt_delayed_free_recall_corr = kafka_source.fcsrt_delayed_free_recall_corr, fcsrt_isc = kafka_source.fcsrt_isc, fcsrt_itr = kafka_source.fcsrt_itr, fcsrt_dtr = kafka_source.fcsrt_dtr, ravlt_immediato_raw = kafka_source.ravlt_immediato_raw, ravlt_immediato_corr = kafka_source.ravlt_immediato_corr, ravlt_differito_raw = kafka_source.ravlt_differito_raw, ravlt_differito_corr = kafka_source.ravlt_differito_corr, ravlt_recognition = kafka_source.ravlt_recognition, digit_span_diretto_raw = kafka_source.digit_span_diretto_raw, digit_span_diretto_corr = kafka_source.digit_span_diretto_corr, digit_span_inverso_raw = kafka_source.digit_span_inverso_raw, digit_span_inverso_corr = kafka_source.digit_span_inverso_corr, corsi_block_tapping_test_raw = kafka_source.corsi_block_tapping_test_raw, corsi_block_tapping_test_corr = kafka_source.corsi_block_tapping_test_corr, figura_di_rey_differita = kafka_source.figura_di_rey_differita, figura_di_rey_differita_corr = kafka_source.figura_di_rey_differita_corr, matrici_attentive_raw = kafka_source.matrici_attentive_raw, matrici_attentive_corr = kafka_source.matrici_attentive_corr, tmt_a_raw = kafka_source.tmt_a_raw, tmt_a_corr = kafka_source.tmt_a_corr, tmt_b_raw = kafka_source.tmt_b_raw, tmt_b_corr = kafka_source.tmt_b_corr, stroop_test_tempo_raw = kafka_source.stroop_test_tempo_raw, stroop_test_tempo_corr = kafka_source.stroop_test_tempo_corr, stroop_test_errori_raw = kafka_source.stroop_test_errori_raw, stroop_test_errori_corr = kafka_source.stroop_test_errori_corr, fluenza_verbale_fonemica_raw = kafka_source.fluenza_verbale_fonemica_raw, fluenza_verbale_fonemica_corr = kafka_source.fluenza_verbale_fonemica_corr, fluenza_verbale_semantica_raw = kafka_source.fluenza_verbale_semantica_raw, fluenza_verbale_semantica_corr = kafka_source.fluenza_verbale_semantica_corr, clock_drawing_test_raw = kafka_source.clock_drawing_test_raw, figura_di_rey_copia = kafka_source.figura_di_rey_copia, test_di_prassia_costruttiva_raw = kafka_source.test_di_prassia_costruttiva_raw, test_di_prassia_costruttiva_corr = kafka_source.test_di_prassia_costruttiva_corr, gds = kafka_source.gds, bdi = kafka_source.bdi, stai_i = kafka_source.stai_i, stai_ii = kafka_source.stai_ii, social_cognition_gs_raw = kafka_source.social_cognition_gs_raw, social_cognition_gs_corr = kafka_source.social_cognition_gs_corr, social_cognition_ia_raw = kafka_source.social_cognition_ia_raw, social_cognition_ia_corr = kafka_source.social_cognition_ia_corr, social_cognition_ea_raw = kafka_source.social_cognition_ea_raw, social_cognition_ea_corr = kafka_source.social_cognition_ea_corr, social_cognition_ci_raw = kafka_source.social_cognition_ci_raw, social_cognition_ci_corr = kafka_source.social_cognition_ci_corr, cri_totale_raw = kafka_source.cri_totale_raw, cri_tempo_libero_raw = kafka_source.cri_tempo_libero_raw, cri_lavoro_raw = kafka_source.cri_lavoro_raw, cri_scuola_raw = kafka_source.cri_scuola_raw, test_linguistici_nndd = kafka_source.test_linguistici_nndd, clinical_data_upsert_at = kafka_source._timestamp
        WHEN NOT MATCHED THEN          
            INSERT (owner_id, id, current_diagnose, age, sex, right_handed, schooling, egfr, first_visit, diagnose_date, a, t, n, memoria, memoria_esordio, fx_esecutive, fx_esecutive_esordio, fx_visuo_spaziali, fx_visuo_spaziali_esordio, linguaggio, linguaggio_esordio, fx_pratto_gnosiche, fx_pratto_gnosiche_esordio, social_cognition, social_cognition_esordio, comportamento, comportamento_esordio, extrapiramidale, adl, iadl, cdr, cdr_sob, tau_totale_liquor, ptau_181_liquor, ttau_ptau, mta, fazekas, koedam, gca, vascular, pet_fdg, spect, pet_a, mmse_raw, mmse_corr, fab_raw, fab_corr, memoria_di_prosa_immediata_raw, memoria_di_prosa_immediata_corr, memoria_di_prosa_differita_raw, memoria_di_prosa_differita_corr, fcsrt_immediate_free_recall_raw, fcsrt_immediate_free_recall_corr, fcsrt_delayed_free_recall_raw, fcsrt_delayed_free_recall_corr, fcsrt_isc, fcsrt_itr, fcsrt_dtr, ravlt_immediato_raw, ravlt_immediato_corr, ravlt_differito_raw, ravlt_differito_corr, ravlt_recognition, digit_span_diretto_raw, digit_span_diretto_corr, digit_span_inverso_raw, digit_span_inverso_corr, corsi_block_tapping_test_raw, corsi_block_tapping_test_corr, figura_di_rey_differita, figura_di_rey_differita_corr, matrici_attentive_raw, matrici_attentive_corr, tmt_a_raw, tmt_a_corr, tmt_b_raw, tmt_b_corr, stroop_test_tempo_raw, stroop_test_tempo_corr, stroop_test_errori_raw, stroop_test_errori_corr, fluenza_verbale_fonemica_raw, fluenza_verbale_fonemica_corr, fluenza_verbale_semantica_raw, fluenza_verbale_semantica_corr, clock_drawing_test_raw, figura_di_rey_copia, test_di_prassia_costruttiva_raw, test_di_prassia_costruttiva_corr, gds, bdi, stai_i, stai_ii, social_cognition_gs_raw, social_cognition_gs_corr, social_cognition_ia_raw, social_cognition_ia_corr, social_cognition_ea_raw, social_cognition_ea_corr, social_cognition_ci_raw, social_cognition_ci_corr, cri_totale_raw, cri_tempo_libero_raw, cri_lavoro_raw, cri_scuola_raw, test_linguistici_nndd, clinical_data_upsert_at)
            VALUES (kafka_source.owner_id, kafka_source.id, kafka_source.current_diagnose, kafka_source.age, kafka_source.sex, kafka_source.right_handed, kafka_source.schooling, kafka_source.egfr, kafka_source.first_visit, kafka_source.diagnose_date, kafka_source.a, kafka_source.t, kafka_source.n, kafka_source.memoria, kafka_source.memoria_esordio, kafka_source.fx_esecutive, kafka_source.fx_esecutive_esordio, kafka_source.fx_visuo_spaziali, kafka_source.fx_visuo_spaziali_esordio, kafka_source.linguaggio, kafka_source.linguaggio_esordio, kafka_source.fx_pratto_gnosiche, kafka_source.fx_pratto_gnosiche_esordio, kafka_source.social_cognition, kafka_source.social_cognition_esordio, kafka_source.comportamento, kafka_source.comportamento_esordio, kafka_source.extrapiramidale, kafka_source.adl, kafka_source.iadl, kafka_source.cdr, kafka_source.cdr_sob, kafka_source.tau_totale_liquor, kafka_source.ptau_181_liquor, kafka_source.ttau_ptau, kafka_source.mta, kafka_source.fazekas, kafka_source.koedam, kafka_source.gca, kafka_source.vascular, kafka_source.pet_fdg, kafka_source.spect, kafka_source.pet_a, kafka_source.mmse_raw, kafka_source.mmse_corr, kafka_source.fab_raw, kafka_source.fab_corr, kafka_source.memoria_di_prosa_immediata_raw, kafka_source.memoria_di_prosa_immediata_corr, kafka_source.memoria_di_prosa_differita_raw, kafka_source.memoria_di_prosa_differita_corr, kafka_source.fcsrt_immediate_free_recall_raw, kafka_source.fcsrt_immediate_free_recall_corr, kafka_source.fcsrt_delayed_free_recall_raw, kafka_source.fcsrt_delayed_free_recall_corr, kafka_source.fcsrt_isc, kafka_source.fcsrt_itr, kafka_source.fcsrt_dtr, kafka_source.ravlt_immediato_raw, kafka_source.ravlt_immediato_corr, kafka_source.ravlt_differito_raw, kafka_source.ravlt_differito_corr, kafka_source.ravlt_recognition, kafka_source.digit_span_diretto_raw, kafka_source.digit_span_diretto_corr, kafka_source.digit_span_inverso_raw, kafka_source.digit_span_inverso_corr, kafka_source.corsi_block_tapping_test_raw, kafka_source.corsi_block_tapping_test_corr, kafka_source.figura_di_rey_differita, kafka_source.figura_di_rey_differita_corr, kafka_source.matrici_attentive_raw, kafka_source.matrici_attentive_corr, kafka_source.tmt_a_raw, kafka_source.tmt_a_corr, kafka_source.tmt_b_raw, kafka_source.tmt_b_corr, kafka_source.stroop_test_tempo_raw, kafka_source.stroop_test_tempo_corr, kafka_source.stroop_test_errori_raw, kafka_source.stroop_test_errori_corr, kafka_source.fluenza_verbale_fonemica_raw, kafka_source.fluenza_verbale_fonemica_corr, kafka_source.fluenza_verbale_semantica_raw, kafka_source.fluenza_verbale_semantica_corr, kafka_source.clock_drawing_test_raw, kafka_source.figura_di_rey_copia, kafka_source.test_di_prassia_costruttiva_raw, kafka_source.test_di_prassia_costruttiva_corr, kafka_source.gds, kafka_source.bdi, kafka_source.stai_i, kafka_source.stai_ii, kafka_source.social_cognition_gs_raw, kafka_source.social_cognition_gs_corr, kafka_source.social_cognition_ia_raw, kafka_source.social_cognition_ia_corr, kafka_source.social_cognition_ea_raw, kafka_source.social_cognition_ea_corr, kafka_source.social_cognition_ci_raw, kafka_source.social_cognition_ci_corr, kafka_source.cri_totale_raw, kafka_source.cri_tempo_libero_raw, kafka_source.cri_lavoro_raw, kafka_source.cri_scuola_raw, kafka_source.test_linguistici_nndd, kafka_source._timestamp);

        
        MERGE INTO hive.default.patients AS target_patients
        USING (
            SELECT owner_id, id, hsa_miR_1539, hsa_miR_6840_3p, hsa_miR_6836_3p, hsa_miR_4667_5p, hsa_miR_208a_5p, hsa_miR_6885_5p, hsa_miR_1306_5p, hsa_miR_3184_5p, hsa_miR_4649_5p, hsa_miR_6859_3p, hsa_miR_6829_3p, hsa_miR_3622a_3p, hsa_miR_4664_3p, hsa_miR_6776_3p, hsa_miR_135a_3p, hsa_miR_6875_5p, hsa_miR_3646, hsa_miR_3614_5p, hsa_miR_128_1_5p, hsa_miR_6813_3p, hsa_miR_6752_5p, hsa_miR_204_3p, hsa_miR_6806_5p, hsa_miR_1538, hsa_miR_6887_3p, hsa_miR_5088_3p, hsa_miR_6743_5p, hsa_miR_4274, hsa_miR_5585_3p, hsa_miR_4787_5p, hsa_miR_320b, hsa_miR_6870_3p, hsa_miR_199a_5p, hsa_miR_4290, hsa_miR_6721_5p, hsa_miR_4728_3p, hsa_miR_3691_5p, hsa_miR_4440, hsa_miR_874_3p, hsa_miR_27a_3p, hsa_miR_2278, hsa_miR_150_3p, hsa_miR_4716_3p, hsa_miR_211_5p, hsa_miR_125a_5p, hsa_miR_4741, hsa_miR_3122, hsa_miR_3180_5p, hsa_miR_574_3p, hsa_miR_150_5p, hsa_miR_133b, hsa_miR_30c_5p, hsa_miR_212_3p, hsa_miR_92b_3p, hsa_miR_504_3p, ath_miR_159a, _timestamp
            FROM kafka.devprin.\"mir-results\"
            WHERE _timestamp >= from_unixtime($START_TIMESTAMP) AND _timestamp < from_unixtime($END_TIMESTAMP)
        ) AS kafka_source
        ON target_patients.id = kafka_source.id AND target_patients.owner_id = kafka_source.owner_id
        WHEN MATCHED THEN
            UPDATE SET hsa_miR_1539 = kafka_source.hsa_miR_1539, hsa_miR_6840_3p = kafka_source.hsa_miR_6840_3p, hsa_miR_6836_3p = kafka_source.hsa_miR_6836_3p, hsa_miR_4667_5p = kafka_source.hsa_miR_4667_5p, hsa_miR_208a_5p = kafka_source.hsa_miR_208a_5p, hsa_miR_6885_5p = kafka_source.hsa_miR_6885_5p, hsa_miR_1306_5p = kafka_source.hsa_miR_1306_5p, hsa_miR_3184_5p = kafka_source.hsa_miR_3184_5p, hsa_miR_4649_5p = kafka_source.hsa_miR_4649_5p, hsa_miR_6859_3p = kafka_source.hsa_miR_6859_3p, hsa_miR_6829_3p = kafka_source.hsa_miR_6829_3p, hsa_miR_3622a_3p = kafka_source.hsa_miR_3622a_3p, hsa_miR_4664_3p = kafka_source.hsa_miR_4664_3p, hsa_miR_6776_3p = kafka_source.hsa_miR_6776_3p, hsa_miR_135a_3p = kafka_source.hsa_miR_135a_3p, hsa_miR_6875_5p = kafka_source.hsa_miR_6875_5p, hsa_miR_3646 = kafka_source.hsa_miR_3646, hsa_miR_3614_5p = kafka_source.hsa_miR_3614_5p, hsa_miR_128_1_5p = kafka_source.hsa_miR_128_1_5p, hsa_miR_6813_3p = kafka_source.hsa_miR_6813_3p, hsa_miR_6752_5p = kafka_source.hsa_miR_6752_5p, hsa_miR_204_3p = kafka_source.hsa_miR_204_3p, hsa_miR_6806_5p = kafka_source.hsa_miR_6806_5p, hsa_miR_1538 = kafka_source.hsa_miR_1538, hsa_miR_6887_3p = kafka_source.hsa_miR_6887_3p, hsa_miR_5088_3p = kafka_source.hsa_miR_5088_3p, hsa_miR_6743_5p = kafka_source.hsa_miR_6743_5p, hsa_miR_4274 = kafka_source.hsa_miR_4274, hsa_miR_5585_3p = kafka_source.hsa_miR_5585_3p, hsa_miR_4787_5p = kafka_source.hsa_miR_4787_5p, hsa_miR_320b = kafka_source.hsa_miR_320b, hsa_miR_6870_3p = kafka_source.hsa_miR_6870_3p, hsa_miR_199a_5p = kafka_source.hsa_miR_199a_5p, hsa_miR_4290 = kafka_source.hsa_miR_4290, hsa_miR_6721_5p = kafka_source.hsa_miR_6721_5p, hsa_miR_4728_3p = kafka_source.hsa_miR_4728_3p, hsa_miR_3691_5p = kafka_source.hsa_miR_3691_5p, hsa_miR_4440 = kafka_source.hsa_miR_4440, hsa_miR_874_3p = kafka_source.hsa_miR_874_3p, hsa_miR_27a_3p = kafka_source.hsa_miR_27a_3p, hsa_miR_2278 = kafka_source.hsa_miR_2278, hsa_miR_150_3p = kafka_source.hsa_miR_150_3p, hsa_miR_4716_3p = kafka_source.hsa_miR_4716_3p, hsa_miR_211_5p = kafka_source.hsa_miR_211_5p, hsa_miR_125a_5p = kafka_source.hsa_miR_125a_5p, hsa_miR_4741 = kafka_source.hsa_miR_4741, hsa_miR_3122 = kafka_source.hsa_miR_3122, hsa_miR_3180_5p = kafka_source.hsa_miR_3180_5p, hsa_miR_574_3p = kafka_source.hsa_miR_574_3p, hsa_miR_150_5p = kafka_source.hsa_miR_150_5p, hsa_miR_133b = kafka_source.hsa_miR_133b, hsa_miR_30c_5p = kafka_source.hsa_miR_30c_5p, hsa_miR_212_3p = kafka_source.hsa_miR_212_3p, hsa_miR_92b_3p = kafka_source.hsa_miR_92b_3p, hsa_miR_504_3p = kafka_source.hsa_miR_504_3p, ath_miR_159a = kafka_source.ath_miR_159a, mir_results_upsert_at = kafka_source._timestamp
        WHEN NOT MATCHED THEN          
            INSERT (owner_id, id, hsa_miR_1539, hsa_miR_6840_3p, hsa_miR_6836_3p, hsa_miR_4667_5p, hsa_miR_208a_5p, hsa_miR_6885_5p, hsa_miR_1306_5p, hsa_miR_3184_5p, hsa_miR_4649_5p, hsa_miR_6859_3p, hsa_miR_6829_3p, hsa_miR_3622a_3p, hsa_miR_4664_3p, hsa_miR_6776_3p, hsa_miR_135a_3p, hsa_miR_6875_5p, hsa_miR_3646, hsa_miR_3614_5p, hsa_miR_128_1_5p, hsa_miR_6813_3p, hsa_miR_6752_5p, hsa_miR_204_3p, hsa_miR_6806_5p, hsa_miR_1538, hsa_miR_6887_3p, hsa_miR_5088_3p, hsa_miR_6743_5p, hsa_miR_4274, hsa_miR_5585_3p, hsa_miR_4787_5p, hsa_miR_320b, hsa_miR_6870_3p, hsa_miR_199a_5p, hsa_miR_4290, hsa_miR_6721_5p, hsa_miR_4728_3p, hsa_miR_3691_5p, hsa_miR_4440, hsa_miR_874_3p, hsa_miR_27a_3p, hsa_miR_2278, hsa_miR_150_3p, hsa_miR_4716_3p, hsa_miR_211_5p, hsa_miR_125a_5p, hsa_miR_4741, hsa_miR_3122, hsa_miR_3180_5p, hsa_miR_574_3p, hsa_miR_150_5p, hsa_miR_133b, hsa_miR_30c_5p, hsa_miR_212_3p, hsa_miR_92b_3p, hsa_miR_504_3p, ath_miR_159a, mir_results_upsert_at)
            VALUES (kafka_source.owner_id, kafka_source.id, kafka_source.hsa_miR_1539, kafka_source.hsa_miR_6840_3p, kafka_source.hsa_miR_6836_3p, kafka_source.hsa_miR_4667_5p, kafka_source.hsa_miR_208a_5p, kafka_source.hsa_miR_6885_5p, kafka_source.hsa_miR_1306_5p, kafka_source.hsa_miR_3184_5p, kafka_source.hsa_miR_4649_5p, kafka_source.hsa_miR_6859_3p, kafka_source.hsa_miR_6829_3p, kafka_source.hsa_miR_3622a_3p, kafka_source.hsa_miR_4664_3p, kafka_source.hsa_miR_6776_3p, kafka_source.hsa_miR_135a_3p, kafka_source.hsa_miR_6875_5p, kafka_source.hsa_miR_3646, kafka_source.hsa_miR_3614_5p, kafka_source.hsa_miR_128_1_5p, kafka_source.hsa_miR_6813_3p, kafka_source.hsa_miR_6752_5p, kafka_source.hsa_miR_204_3p, kafka_source.hsa_miR_6806_5p, kafka_source.hsa_miR_1538, kafka_source.hsa_miR_6887_3p, kafka_source.hsa_miR_5088_3p, kafka_source.hsa_miR_6743_5p, kafka_source.hsa_miR_4274, kafka_source.hsa_miR_5585_3p, kafka_source.hsa_miR_4787_5p, kafka_source.hsa_miR_320b, kafka_source.hsa_miR_6870_3p, kafka_source.hsa_miR_199a_5p, kafka_source.hsa_miR_4290, kafka_source.hsa_miR_6721_5p, kafka_source.hsa_miR_4728_3p, kafka_source.hsa_miR_3691_5p, kafka_source.hsa_miR_4440, kafka_source.hsa_miR_874_3p, kafka_source.hsa_miR_27a_3p, kafka_source.hsa_miR_2278, kafka_source.hsa_miR_150_3p, kafka_source.hsa_miR_4716_3p, kafka_source.hsa_miR_211_5p, kafka_source.hsa_miR_125a_5p, kafka_source.hsa_miR_4741, kafka_source.hsa_miR_3122, kafka_source.hsa_miR_3180_5p, kafka_source.hsa_miR_574_3p, kafka_source.hsa_miR_150_5p, kafka_source.hsa_miR_133b, kafka_source.hsa_miR_30c_5p, kafka_source.hsa_miR_212_3p, kafka_source.hsa_miR_92b_3p, kafka_source.hsa_miR_504_3p, kafka_source.ath_miR_159a, kafka_source._timestamp);
    

        COMMIT;
    " && { echo "CDC Completed successfully"; RUN_SUCCESS=1; } || { echo "CDC process failed"; RUN_SUCCESS=0; }

    sleep "$FLUSH_DELAY_SECONDS"
done
